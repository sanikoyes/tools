.TH "al_set_shader_int_vector" "3" "" "Allegro reference manual" ""
.SH NAME
.PP
al_set_shader_int_vector \- Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <allegro5/allegro.h>

bool\ al_set_shader_int_vector(const\ char\ *name,
\ \ \ int\ num_components,\ int\ *i,\ int\ num_elems)
\f[]
.fi
.SH DESCRIPTION
.PP
Sets an integer vector array uniform of the current target bitmap\[aq]s
shader.
The \[aq]num_components\[aq] parameter can take one of the values 1, 2,
3 or 4.
If it is 1 then an array of \[aq]num_elems\[aq] integer elements is
added.
Otherwise each added array element is assumed to be a vector with 2, 3
or 4 components in it.
.PP
For example, if you have a GLSL uniform declared as
\f[C]uniform\ ivec3\ flowers[4]\f[] or an HLSL uniform declared as
\f[C]uniform\ int3\ flowers[4]\f[], then you\[aq]d use this function
from your code like so:
.IP
.nf
\f[C]
int\ flowers[4][3]\ =
{
\ \ \ {1,\ 2,\ 3},
\ \ \ {4,\ 5,\ 6},
\ \ \ {7,\ 8,\ 9},
\ \ \ {2,\ 5,\ 7}
};

al_set_shader_int_vector("flowers",\ 3,\ (int*)flowers,\ 4);
\f[]
.fi
.PP
Returns true on success.
Otherwise returns false, e.g.
if the uniform by that name does not exist in the shader.
.SH SINCE
.PP
5.1.0
.SH SEE ALSO
.PP
al_set_shader_float_vector(3), al_use_shader(3)
